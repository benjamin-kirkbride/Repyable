[build-system]
requires = ["setuptools", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "diana"
version = "0.0.1"
requires-python = ">=3.11"


dependencies = [
    "arcade==3.0.0.dev29",
    "faker",
    "extended-int",
    "esper==3.3",
    "networkx==3.2.1",
    "bidict==0.23.1",
    "loguru==0.7.2",
    
]

[project.optional-dependencies]

dev = [
    "coverage",
    "pytest>=8.2.2",
    "pytest-sugar",
    "mypy>=1.10.1",
    "black",
    "ruff",
    "pytest-xdist",
    "python-dotenv",
    "pytest-cov",
    "hypothesis",
    "pudb",
    "snakeviz",
    "types-Pillow",
    "types-networkx==3.2.1.20240618",
    "rpyc==6.0.0",
]

[tool.ruff]
ignore = [
    "DJ", # flake8-django
    "ANN", # flake8-annotations - leave these to mypy
    "TCH010", # leave type annotation enforcement to the proffesionals
    "PD", # pandas-vet - we don't use pandas
    "NPY", # NumPy-specific rules - we don't use numpy
    "AIR", # Airflow - we don't use apache airflow
    "S101", # Use of assert detected - I use assert for typing and testing
    "G004", # logging-f-string - I want to use fstrings for logs, I don't care about the consequences
    "COM812", # https://github.com/astral-sh/ruff/issues/6525
]
select = ["ALL"]

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = [
    "D103", # Missing docstring in public function
    
]

[tool.mypy]
python_version = "3.11"
explicit_package_bases = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true

plugins = [
    "numpy.typing.mypy_plugin",
]

[[tool.mypy.overrides]]
module = "tests.*"

disallow_untyped_defs = false



[tool.setuptools]
packages = ["diana"]

[tool.pytest.ini_options]
python_files = ["test_*.py", "benchmark_*.py"]
python_classes = ["Test*", "*Benchmark"]
python_functions = ["test_*", "benchmark_*"]

testpaths = ["tests"]